'''
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj|
is minimised; what is the value of D?

'''
from itertools import  count
from bisect import bisect_left

def in_list(coll, elem, lo=0, hi=None):
    hi = hi or len(coll)
    idx = bisect_left(coll, elem)
    return idx < hi and coll[idx] == elem

pentagonals = (int(x / 2 * (3 * x - 1)) for x in count(1, 1))
cache = [next(pentagonals), next(pentagonals)]
least = None

for x in count(0, 1):
    curr = cache[x]
    if least and curr - cache[x -1] > least:
        break
    for y in reversed(range(x)):
        prev = cache[y]
        sum = prev + curr
        diff = curr - prev
        if least and least < diff:
            break
        while cache[-1] < sum:
            cache.append(next(pentagonals))
        if in_list(cache, sum) and in_list(cache, diff):
            least = diff

print(least)